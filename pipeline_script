pipeline {
    agent any

    stages {
        stage ('Pre-QA_Deployment_Missing_File_Check') {
            steps {
                println "... executing pre-QA_deployment check for missing files"
                sh './qa_chk.sh index.html'
            }
        }
        stage ('QA_Deploy') {
            steps {
              println "... executing QA deployment stage"
              withCredentials([
                string(credentialsId: 'secret_webuser', variable: 'SECRETUSER'),
                string(credentialsId: 'secret_webhost', variable: 'SECRETHOST'),
                string(credentialsId: 'secret_profilekey', variable: 'SECRETKEY')
              ]){
                  // Random, generally increasing waittime is used since webhost site closes connection when repeated file transfers occur too quick.
                  // Copy all referenced files including parent html to QA location by doing the following:
                  // - execute sync.sh to create a list of all files that do not exist at webhost QA location or that may need updating (e.g sync.flist)
                  // - cross reference the list against list of files referenced by parent html, create required remote directories and scp files
                  sh 'WRKDIR=`pwd`; BASE_DIRNAME=`basename $WRKDIR`; i=10; waitfloor=5; ./sync.sh 2>/dev/null; cat $BASE_DIRNAME.flist | grep "^$BASE_DIRNAME" | sed "s#^$BASE_DIRNAME/##" | sort > ref.flist; echo "--- FILES TO SYNC ---"; comm -12 sync.flist ref.flist; comm -12 sync.flist ref.flist | while read f; do dirname $f; done | sort -u | grep -v "^.\$" | while read dir; do ssh -i ${SECRETKEY} ${SECRETUSER}@${SECRETHOST} "mkdir -p /home/ar4jf2nz/public_html/QA_${BASE_DIRNAME}/$dir"; comm -12 sync.flist ref.flist | while read f; do waittime=$(($(($RANDOM % 15))+$waitfloor)); scp -p -i ${SECRETKEY} $f ${SECRETUSER}@${SECRETHOST}:/home/ar4jf2nz/public_html/QA_${BASE_DIRNAME}/$f; sleep $waittime; i=$(($i+1)); waitfloor=$(($i/5)); done'
              }
            }
        }
        stage ('QA_Test') {
            steps {
                println "... executing QA test stage: (1) test home page and (2) test referenced links"
            }
        }
        stage ('PROD_Deploy') {
            steps {
                sh 'echo "... printing list of files from github"'
                sh 'ls -lrt'
                println "... if QA test stage succeeds, executing PROD deployment stage"
            }
        }
        stage ('Report_Valid_Files') {
            steps {
                println "... if PROD deployment succeeds, executing report valid files stage"
            }
        }
        stage ('Report_Obsolete_Files') {
            steps {
                println "... executing report obsolete files stage"
            }
        }
    }
}
